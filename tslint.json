{
    "extends": [
        "tslint-eslint-rules"
    ],
    "rules": {
        // 5.8.0.
        "adjacent-overload-signatures": true,
        "align": [
            true,
            "parameters",
            "statements"
        ],
        "array-bracket-spacing": [ // tslint-eslint-rules
            true,
            "never"
        ],
        "array-type": [
            false,
            "array"
        ],
        "arrow-parens": [
            false,
            "ban-single-arg-parens"
        ],
        "arrow-return-shorthand": true,
        "ban": [
            false
        ],
        "ban-comma-operator": true,
        "ban-types": false,
        "binary-expression-operand-order": false,
        "block-spacing": [ // tslint-eslint-rules
            true,
            "always"
        ],
        "brace-style": [ // tslint-eslint-rules
            "1tbs",
            {
                "allowSingleLine": true
            },
            true
        ],
        "callable-types": true,
        "class-name": true,
        "comment-format": [
            true,
            "check-space"
        ],
        "completed-docs": [
            false,
            "enums",
            "functions",
            "methods"
        ],
        "curly": true,
        // TODO:Tripp evaluate this.
        "cyclomatic-complexity": [
            false,
            20
        ],
        "deprecation": true,
        "encoding": true,
        "eofline": true,
        "forin": true,
        "file-header": [
            false,
            "Copyright \\d{4}"
        ],
        "handle-callback-err": true, // tslint-eslint-rules
        "import-blacklist": false,
        "import-spacing": true,
        "indent": [
            true,
            "spaces",
            2
        ],
        "interface-name": false,
        "interface-over-type-literal": true,
        "jsdoc-format": true,
        "label-position": true,
        "linebreak-style": [
            true,
            "LF"
        ],
        "match-default-export-name": false,
        "max-classes-per-file": [
            true,
            1
        ],
        "max-file-line-count": [
            true,
            1300
        ],
        "max-line-length": [
            true,
            120
        ],
        "member-access": true,
        "member-ordering": [
            false,
            {
                "order": [
                    "public-before-private",
                    "static-before-instance",
                    "variables-before-functions"
                ]
            }
        ],
        "newline-before-return": false,
        "new-parens": true,
        "no-angle-bracket-type-assertion": false,
        "no-boolean-literal-compare": true,
        "no-any": false,
        "no-arg": true,
        "no-bitwise": false,
        "no-conditional-assignment": false,
        "no-consecutive-blank-lines": true,
        "no-console": true,
        "no-constant-condition": true, // tslint-eslint-rules
        "no-control-regex": true, // tslint-eslint-rules
        "no-construct": true,
        "no-debugger": true,
        "no-default-export": false,
        "no-duplicate-case": true, // tslint-eslint-rules
        "no-duplicate-imports": true,
        "no-duplicate-super": true,
        "no-duplicate-switch-case": true,
        "no-duplicate-variable": true,
        "no-empty": true,
        "no-empty-character-class": true, // tslint-eslint-rules
        "no-empty-interface": false,
        "no-eval": true,
        "no-ex-assign": true, // tslint-eslint-rules
        "no-extra-boolean-cast": true, // tslint-eslint-rules
        "no-extra-semi": true, // tslint-eslint-rules
        "no-floating-promises": true,
        "no-for-in-array": true,
        "no-implicit-dependencies": [
            true,
            "dev"
        ],
        "no-import-side-effect": false,
        "no-inferrable-types": [
            true,
            "ignore-params"
        ],
        "no-inferred-empty-object-type": false,
        "no-inner-declarations": true, // tslint-eslint-rules
        "no-internal-module": false,
        "no-invalid-regexp": true, // tslint-eslint-rules
        "no-invalid-template-strings": true,
        "no-invalid-this": false,
        "no-irregular-whitespace": true, // tslint-eslint-rules
        "no-misused-new": true,
        "no-mergeable-namespace": false,
        "no-magic-numbers": false,
        "no-multi-spaces": true, // tslint-eslint-rules
        "no-namespace": false,
        "no-non-null-assertion": true,
        "no-null-keyword": false,
        "no-object-literal-type-assertion": false,
        "no-parameter-properties": false,
        "no-parameter-reassignment": false,
        "no-redundant-jsdoc": false, // could be useful, but a lot of fixing.
        "no-reference": false,
        "no-reference-import": true,
        "no-regex-spaces": true, // tslint-eslint-rules
        "no-require-imports": false,
        "no-return-await": true,
        "no-shadowed-variable": false,
        "no-sparse-arrays": true, // tslint-eslint-rules
        "no-string-literal": true,
        "no-string-throw": true,
        "no-submodule-imports": false,
        "no-switch-case-fall-through": true,
        "no-this-assignment": true,
        "no-trailing-whitespace": true,
        "no-unexpected-multiline": true, // tslint-eslint-rules
        "no-unbound-method": [
            true,
            "ignore-static"
        ],
        "no-unnecessary-callback-wrapper": true,
        "no-unnecessary-initializer": true,
        "no-unnecessary-type-assertion": true,
        "no-unnecessary-qualifier": true,
        "no-unsafe-any": false,
        "no-unsafe-finally": true,
        "no-unused-expression": true,
        "no-unused-variable": [
            true,
            "react"
        ],
        "no-use-before-declare": true,
        "no-var-keyword": true,
        "no-var-requires": false,
        "no-void-expression": [
            false,
            "ignore-arrow-function-shorthand"
        ],
        "number-literal-format": true,
        "object-curly-spacing": [
            true,
            "never"
        ],
        "object-literal-key-quotes": [
            true,
            "as-needed"
        ],
        "object-literal-shorthand": true,
        "object-literal-sort-keys": false,
        "one-line": [
            true,
            "check-catch",
            "check-else",
            "check-finally",
            "check-open-brace",
            "check-whitespace"
        ],
        "one-variable-per-declaration": [
            true,
            "ignore-for-loop"
        ],
        "only-arrow-functions": [
            true,
            "allow-declarations",
            "allow-named-functions"
        ],
        "ordered-imports": false,
        "prefer-conditional-expression": true,
        "prefer-const": false,
        "prefer-for-of": true,
        "prefer-switch": [
            false,
            {
                "min-cases": 3
            }
        ],
        "promise-function-async": true,
        "prefer-function-over-method": false,
        "prefer-method-signature": false,
        "prefer-object-spread": true,
        "prefer-template": [
            true,
            "allow-single-concat"
        ],
        "quotemark": [
            true,
            "avoid-escape",
            "jsx-single",
            "single"
        ],
        "radix": true,
        "return-undefined": true,
        "restrict-plus-operands": false,
        "space-before-function-paren": [
            true,
            "never"
        ],
        "space-in-parens": [
            true,
            "never"
        ],
        // I would love to turn this on, but there's just too many errors that need to be fixed and tested.
        "strict-boolean-expressions": [
            false,
            "allow-null-union",
            "allow-undefined-union",
            "allow-string",
            "allow-number"
        ],
        // Enable once strictNullChecks can be implemented.
        "strict-type-predicates": false,
        "semicolon": [
            true,
            "always"
        ],
        "switch-default": true,
        "switch-final-break": true,
        "ter-func-call-spacing": [ // tslint-eslint-rules
            true,
            "never"
        ],
        "ter-indent": [ // tslint-eslint-rules
            false,
            2
        ],
        "ter-prefer-arrow-callback": [
            {
                "allowNamedFunctions": true
            },
            false
        ],
        "ter-max-len": false, // tslint-eslint-rules
        "trailing-comma": [
            true,
            {
                "multiline": "always",
                "singleline": "never"
            }
        ],
        "triple-equals": [
            true,
            "allow-null-check",
            "allow-undefined-check"
        ],
        "typedef": [
            true,
            "call-signature",
            "parameter"
        ],
        "type-literal-delimiter": true,
        "typedef-whitespace": [
            true,
            {
                "call-signature": "nospace",
                "index-signature": "nospace",
                "parameter": "nospace",
                "property-declaration": "nospace",
                "variable-declaration": "nospace"
            },
            {
                "call-signature": "onespace",
                "index-signature": "onespace",
                "parameter": "onespace",
                "property-declaration": "onespace",
                "variable-declaration": "onespace"
            }
        ],
        "unified-signatures": true,
        "use-default-type-parameter": true,
        "use-isnan": true,
        "valid-jsdoc": false, // tslint-eslint-rules
        "valid-typeof": true, // tslint-eslint-rules
        "variable-name": [
            true,
            "allow-leading-underscore",
            "ban-keywords"
        ],
        "whitespace": [
            true,
            // "check-module",
            "check-branch",
            "check-decl",
            "check-operator",
            "check-separator",
            "check-type",
            "check-typecast",
            "check-rest-spread",
            "check-type-operator",
            "check-preblock"
        ]
    }
}